syntax = "proto2";

package msg;
//import "google/protobuf/any.proto";

//// 处理未登录时的用户消息(版本检查/公告/登录/注册)
//// game definition
//service LoginService {
//    rpc Login(LoginFrame) returns (LoginFrame);
//}
//
//message LoginFrame {
//    fixed32 sessionId = 1;
//    fixed32 userId = 2;
//    int32 messageId = 3;
//    bytes message = 4;
//}

// 心跳请求
message HeartBeatReq{
    optional int32 id = 1;
}

// 心跳回复
message HeartBeatAck{
    optional int32 id = 1;
}

// 一般性回复,0代表成功
message ErrorInfo{
    optional int32 ReqId = 1;
    optional int32 Code = 2;
    optional string Msg = 3;
    optional string Key = 4;
}

// 加密种子
message SeedInfo{
    optional int32 	SendSeed    = 1;
    optional int32	ReceiveSeed = 2;
}

// 设备信息
message DeviceInfo {
    optional string id = 1;      // 设备ID()
    optional string vend = 2;    // 设备制造商
    optional string name = 3;    // 产品型号
    optional string mac = 4;     // 设备mac地址
    optional string imei = 5;    // 设备imei地址
    optional string emid = 6;    // 设备emid地址
    optional string sn = 7;      // 序列号
    optional string osLang = 8;  // 操作系统语言
    optional string osVer = 9;   // 操作系统版本
    optional string other = 10;  // 设备其它信息
}

// 应用信息
message Application{
    optional int32 id = 1;       // 应用类型(同一应用类型的客户端可以互通)
    optional int32 pack = 2;     // 包ID(用于区分来源，写死在程序中)
    optional string ver = 3;     // 应用版本号
    optional string chan = 4; // 渠道ID(用于统计推广渠道)
    optional string refer = 5;   // 推广ID(玩家推广)
    optional string other = 6;   // 应用其它信息
}

message VerCheckReq{
    optional Application app = 1;// 应用信息
    optional int32 time = 2;    // 时间
    optional int32 check = 3;   // check(md5(机器码+时间+签名)的前2位数为0,)
}

message VerCheckAck {
    optional int32 code = 1;
    optional string msg = 2;
    optional int32 canReg = 3;
    optional int32 canLogin = 4;
    map<string, string> conf = 5;
}

// 用户登录发包
message LoginReq {
    optional int32 type = 1;        // 账号类型 0:用户名密码 1：uid 2：客户端证书
    optional string name = 2;       // 用户名或UID
    optional string token = 3;      // 密码或者证书或者TOKEN
    optional string udid = 4;    // 机器码
    optional int32 userId = 5;      // 角色ID
    optional int32 time = 6;        // 登录时间
    optional DeviceInfo device = 7; // 设备信息
    optional Application app = 8;   // 应用信息
}

message LoginAck{
    oneof Ack {
        LoginSuccessAck success = 1;
        LoginFailAck fail = 2;
    }
}

// 用户登录成功消息
message LoginSuccessAck{
    optional int32 id = 1;
    optional int32 app = 2;
    optional int32 icon = 3;
    optional int32 sex = 4;
    optional int32 vip = 5;
    optional string account = 6;
    optional string name = 7;
    optional string token = 8;
    optional string phone = 9;
    optional int64 bank = 10;
    optional int64 gold = 11;
}

// 用户登录失败消息
message LoginFailAck{
    optional int32 code = 1;     //错误代码
    optional string msg = 2;     //错误消息
}

message RoomInfo{
    optional string name = 1;      //房间名字
    optional int32 id = 2;         //房间ID
    optional int32 kind = 3;       //房间分类
    optional int32 level = 4;      //房间等级
    optional int32 capacity = 5;   //房间容量
    optional int32 bottom = 6;     //下注底注
    optional int32 minimum = 7;    //准入门槛
    optional int32 icon = 8;       //图标
    optional int32 online = 9;     //当前在线人数
}

// 获取房间列表
message RoomListReq{
    optional int32 roomKind = 1;       //房间分类
}

message RoomListAck{
    repeated RoomInfo roomList = 1;       //房间列表
}

// 用户连接房间
message ConnectRoomReq{
    optional int32 room = 1;    //房间ID
    optional string argc = 2;    //其它参数
}

// 用户连接房间
message ConnectRoomAck{
    optional int32 room = 1;    //房间ID
    optional int32 code = 2;     //错误代码
    optional string msg = 3;     //错误消息
}


